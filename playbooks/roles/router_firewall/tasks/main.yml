---
# tasks file for router_firewall
#setup
- name: "Get device for wan network"
  shell: "ip route | grep {{ network.subnet.grep.wan }} | sed 's/^.*dev \\([^ ]*\\).*$/\\1/g'"
  register: wan_dev
  changed_when: false
- debug:
    var: wan_dev.stdout
- name: "Get device for dmz network"
  shell: "ip route | grep {{ network.subnet.grep.dmz }} | sed 's/^.*dev \\([^ ]*\\).*$/\\1/g'"
  register: dmz_dev
  changed_when: false
- debug:
    var: dmz_dev.stdout
- name: "Get device for lan network"
  shell: "ip route | grep {{ network.subnet.grep.lan }} | sed 's/^.*dev \\([^ ]*\\).*$/\\1/g'"
  register: lan_dev
  changed_when: false
- debug:
    var: lan_dev.stdout
- name: "Make sure firewalld is installed"
  dnf:
    name: firewalld
    state: present
- name: "Make sure firewalld is enabled and running"
  service:
    name: firewalld
    enabled: yes
    state: started

# zones
- name: "Make sure wan ip range is in appropriate zone"
  ansible.posix.firewalld:
    zone: external
    interface: "{{ wan_dev.stdout }}"
    permanent: yes
    immediate: yes
    state: enabled
- name: "Make sure dmz ip range is in appropriate zone"
  ansible.posix.firewalld:
    zone: dmz
    interface: "{{ dmz_dev.stdout }}"
    permanent: yes
    immediate: yes
    state: enabled
- name: "Make sure lan ip range is in appropriate zone"
  ansible.posix.firewalld:
    zone: internal
    interface: "{{ lan_dev.stdout }}"
    permanent: yes
    immediate: yes
    state: enabled

# rules

